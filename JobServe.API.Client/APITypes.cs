//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Runtime.Serialization.ContractNamespaceAttribute("http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ClrNamespace="JobServe.API")]

/// <summary>
/// Generated at 2013-05-15 12:11:10Z from https://services.jobserve.com/schema.xsd.
/// Web API Version: 1.0.30416.1345, Build date: 2013-04-23 08:10:59Z, Config date: 2013-04-23 08:44:16Z
/// Please note - these types are suitable ONLY for generating compliant XML.  Please visit the website for notes on how to work with JSON
/// IMPORTANT: This code includes types used by APIs not intended for general consumption
/// </summary>
namespace JobServe.API {
    using System.Runtime.Serialization;
    
    
    /// <summary>(AMG Use Only) Represents a postal address</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Address", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class Address : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string HouseBuildingNoField;
        
        private string Address1Field;
        
        private string Address2Field;
        
        private string Address3Field;
        
        private string Address4Field;
        
        private string TownCityField;
        
        private string CountyStateField;
        
        private string PostZipCodeField;
        
        private string CountryIDField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>Number or name of house/building.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HouseBuildingNo {
            get {
                return this.HouseBuildingNoField;
            }
            set {
                this.HouseBuildingNoField = value;
            }
        }
        
        /// <summary>First line of the address.</summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                this.Address1Field = value;
            }
        }
        
        /// <summary>Second line of the address.</summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                this.Address2Field = value;
            }
        }
        
        /// <summary>Third line of the address.</summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Address3 {
            get {
                return this.Address3Field;
            }
            set {
                this.Address3Field = value;
            }
        }
        
        /// <summary>Fourth line of the address.</summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Address4 {
            get {
                return this.Address4Field;
            }
            set {
                this.Address4Field = value;
            }
        }
        
        /// <summary>Town/City of this address.</summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string TownCity {
            get {
                return this.TownCityField;
            }
            set {
                this.TownCityField = value;
            }
        }
        
        /// <summary>County/State of this address.</summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string CountyState {
            get {
                return this.CountyStateField;
            }
            set {
                this.CountyStateField = value;
            }
        }
        
        /// <summary>Post/Zip code of this address.</summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string PostZipCode {
            get {
                return this.PostZipCodeField;
            }
            set {
                this.PostZipCodeField = value;
            }
        }
        
        /// <summary>ID of the country that this address is in.</summary>
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string CountryID {
            get {
                return this.CountryIDField;
            }
            set {
                this.CountryIDField = value;
            }
        }
    }
    
    /// <summary>(AMG Use Only) Used to represent high-level information about a candidate (job-seeker).</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Candidate", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class Candidate : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private JobServe.API.Address AddressField;
        
        private string EmailAddressField;
        
        private string FirstNameField;
        
        private string HomeTelephoneField;
        
        private string MobileTelephoneField;
        
        private JobServe.API.IDCollection PreferredSearchCountriesField;
        
        private string SurnameField;
        
        private string TitleField;
        
        private string UserNameField;
        
        private string WorkTelephoneField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>Home address for the candidate.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.Address Address {
            get {
                return this.AddressField;
            }
            set {
                this.AddressField = value;
            }
        }
        
        /// <summary>Contact email address for the candidate.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                this.EmailAddressField = value;
            }
        }
        
        /// <summary>First name of the candidate.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                this.FirstNameField = value;
            }
        }
        
        /// <summary>Home telephone number for contacting the candidate.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeTelephone {
            get {
                return this.HomeTelephoneField;
            }
            set {
                this.HomeTelephoneField = value;
            }
        }
        
        /// <summary>Mobile telephone number for contacting the candidate.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MobileTelephone {
            get {
                return this.MobileTelephoneField;
            }
            set {
                this.MobileTelephoneField = value;
            }
        }
        
        /// <summary>Zero or more IDs of countries that the Candidate has set as 'preferred' countries.  These are to be used for a saved search when it has the 'UsePreferredSearchCountries' flag set.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.IDCollection PreferredSearchCountries {
            get {
                return this.PreferredSearchCountriesField;
            }
            set {
                this.PreferredSearchCountriesField = value;
            }
        }
        
        /// <summary>Surname of the candidate.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                this.SurnameField = value;
            }
        }
        
        /// <summary>Title (e.g. Mr/Mrs/Dr etc) of the candidate.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                this.TitleField = value;
            }
        }
        
        /// <summary>Sign-on user name for the candidate.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                this.UserNameField = value;
            }
        }
        
        /// <summary>Work telephone number for contacting the candidate.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkTelephone {
            get {
                return this.WorkTelephoneField;
            }
            set {
                this.WorkTelephoneField = value;
            }
        }
    }
    
    /// <summary>A collection of resource IDs (e.g. Jobs, Countries, Industries etc)</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="IDCollection", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ItemName="ID")]
    public partial class IDCollection : System.Collections.Generic.List<string> {
    }
    
    /// <summary>Represents a currency - used primarily so you can format salary range values correctly, with the correct symbol.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Currency", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class Currency : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string IDField;
        
        private string NameField;
        
        private string SymbolField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>The ID of this currency - this should always be an ISO-4217 currency symbol (e.g. 'GBP' or 'USD')</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                this.IDField = value;
            }
        }
        
        /// <summary>The official name of this currency localised according to the primary accepted language from the request</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                this.NameField = value;
            }
        }
        
        /// <summary>The symbol to be used in displaying values in this currency, localised according to the primary accepted language from the request  (e.g. '£, $, US$')</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol {
            get {
                return this.SymbolField;
            }
            set {
                this.SymbolField = value;
            }
        }
    }
    
    /// <summary>Represents zero or more currencies.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CurrencyCollection", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ItemName="Currency")]
    public partial class CurrencyCollection : System.Collections.Generic.List<JobServe.API.Currency> {
    }
    
    /// <summary>(AMG Use Only) Used primarily to upload binary files for job applications.  The file must be uploaded first, the resulting ID stored and then used on the application itself.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileUpload", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class FileUpload : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ContentBase64Field;
        
        private string FileNameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>Base-64 encoded file contents.</summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public string ContentBase64 {
            get {
                return this.ContentBase64Field;
            }
            set {
                this.ContentBase64Field = value;
            }
        }
        
        /// <summary>Filename for this upload - note, must not include any path information - only the filename itself.</summary>
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                this.FileNameField = value;
            }
        }
    }
    
    /// <summary>(AMG Use Only) Base type for all form fields.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormField", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(JobServe.API.FormMultiField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(JobServe.API.FormCVField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(JobServe.API.FormSelectionField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(JobServe.API.FormTextField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(JobServe.API.FormFileField))]
    public partial class FormField : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DisplayTextField;
        
        private string FieldSubTypeField;
        
        private string FieldTypeField;
        
        private string IDField;
        
        private bool MandatoryField;
        
        private JobServe.API.StringCollection ValidationFailuresField;
        
        private JobServe.API.FormFieldValue ValueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>Text to be displayed along with the field - e.g. 'What is your first name?'.  Note that for fields that contain other fields, this text is likely to be intended as a sub-heading/group name.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                this.DisplayTextField = value;
            }
        }
        
        /// <summary>A short code that, if present, identifies a sub-type for this field.  This can be used in addition to the FieldType to customise any UI you use to bind to this field.  An example would be 'email' for text fields which are intended to receive an email address.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldSubType {
            get {
                return this.FieldSubTypeField;
            }
            set {
                this.FieldSubTypeField = value;
            }
        }
        
        /// <summary>A short code that represents the primary type of this field.  E.g 'txt' for a text field.  Note that this generally changes in line with the actual type of the field (i.e, in XML, the schema type).  This is more useful when integrating with the forms system via JSON - although then you also have the '$type' special member.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldType {
            get {
                return this.FieldTypeField;
            }
            set {
                this.FieldTypeField = value;
            }
        }
        
        /// <summary>Unique ID (in the scope of the form) for this field.  For clients implementing a system where previous answers are remembered for particular fields - it is safe to use this ID as the key for any previous answer.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                this.IDField = value;
            }
        }
        
        /// <summary>If true, then providing a non-empty answer for this question is required in order for the form to pass validation.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Mandatory {
            get {
                return this.MandatoryField;
            }
            set {
                this.MandatoryField = value;
            }
        }
        
        /// <summary>If this field fails validation on the server when you submit the form, then this will contain the errors that occurred.  These messages will be safe to display to a user.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.StringCollection ValidationFailures {
            get {
                return this.ValidationFailuresField;
            }
            set {
                this.ValidationFailuresField = value;
            }
        }
        
        /// <summary>Value for this field - the type of value required/allowed depends on the type of field.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.FormFieldValue Value {
            get {
                return this.ValueField;
            }
            set {
                this.ValueField = value;
            }
        }
    }
    
    /// <summary>(AMG Use Only) This is the root type for all values to be used on form fields.  This is not intended to be used directly - only through being the base of another type.  In OOP terms, this type is abstract.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormFieldValue", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(JobServe.API.FormFieldFileValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(JobServe.API.FormFieldSelectionValue))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(JobServe.API.FormFieldTextValue))]
    public partial class FormFieldValue : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
    }
    
    /// <summary>(AMG Use Only) A collection of multiple fields, either to group them logically or to provide more than one way of supplying a value for a single field.  In general, the former will use this type directly, whereas the latter using a type that uses this as its base (e.g. FormCVField).  Note that you will generally never write to this field's Value property directly in either case - unless it is explicitly indicated that you should.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormMultiField", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(JobServe.API.FormCVField))]
    public partial class FormMultiField : JobServe.API.FormField {
        
        private JobServe.API.FormFieldCollection FieldsField;
        
        /// <summary>Contains the fields that are grouped within this multi-field.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.FormFieldCollection Fields {
            get {
                return this.FieldsField;
            }
            set {
                this.FieldsField = value;
            }
        }
    }
    
    /// <summary>(AMG Use Only) Used on job application forms to represent the CV question.  This is treated as a special case because, when a candidate is logged in, there is a choice of either uploading a new CV or selecting an existing one.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormCVField", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class FormCVField : JobServe.API.FormMultiField {
    }
    
    /// <summary>(AMG Use Only) A field whose value is represented by a single selection (in UI terms, a dropdown box).  The values from which a selection is to be made are found in the AvailableValues member.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormSelectionField", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class FormSelectionField : JobServe.API.FormField {
        
        private JobServe.API.FormFieldSelectionValuesCollection AvailableValuesField;
        
        /// <summary>The selections that should be presented to the user.  Generally each of these values will have a unique ID and the eventual value you pass back with this field simply has to match that ID.  When submitting the form back, only the ID needs to be sent.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.FormFieldSelectionValuesCollection AvailableValues {
            get {
                return this.AvailableValuesField;
            }
            set {
                this.AvailableValuesField = value;
            }
        }
    }
    
    /// <summary>(AMG Use Only) A free-text field, the value of which is expected be a FormFieldTextValue.  Note that the ability of this field to support multiple lines of text is implied by the FieldSubType.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormTextField", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class FormTextField : JobServe.API.FormField {
        
        private System.Nullable<int> MaxLengthField;
        
        /// <summary>The maximum length of text, including whitespace, supported by this field.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxLength {
            get {
                return this.MaxLengthField;
            }
            set {
                this.MaxLengthField = value;
            }
        }
    }
    
    /// <summary>(AMG Use Only) A field whose value is expected to be a FormFieldFileValue.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormFileField", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class FormFileField : JobServe.API.FormField {
        
        private System.Nullable<int> MaxLengthField;
        
        /// <summary>If present, indicates the maximum file size supported for a new upload.  Please note that if this isn't present, it doesn't mean the size is unlimited.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxLength {
            get {
                return this.MaxLengthField;
            }
            set {
                this.MaxLengthField = value;
            }
        }
    }
    
    /// <summary>Zero or more string values</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="StringCollection", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ItemName="String")]
    public partial class StringCollection : System.Collections.Generic.List<string> {
    }
    
    /// <summary>(AMG Use Only) Used as the Value on the FormFileField to indicate a file upload, or previously uploaded file.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormFieldFileValue", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class FormFieldFileValue : JobServe.API.FormFieldValue {
        
        private string ContentBase64Field;
        
        private string FileNameField;
        
        private string IDField;
        
        /// <summary>Used to upload file contents on demand - NOT SUPPORTED FOR JOB APPLICATIONS.  For job applications you must upload the file first to get an ID, then pass that and the filename.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContentBase64 {
            get {
                return this.ContentBase64Field;
            }
            set {
                this.ContentBase64Field = value;
            }
        }
        
        /// <summary>File name of the file - excluding path information.  If passing an ID this is not required.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                this.FileNameField = value;
            }
        }
        
        /// <summary>ID of a file that was previously uploaded.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                this.IDField = value;
            }
        }
    }
    
    /// <summary>(AMG Use Only) Used as the value on the FormSelectionField.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormFieldSelectionValue", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class FormFieldSelectionValue : JobServe.API.FormFieldValue {
        
        private string IDField;
        
        private string TextField;
        
        /// <summary>The ID of value from the AvailableValues collection on the field.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                this.TextField = value;
            }
        }
    }
    
    /// <summary>(AMG Use Only) Used as the value for a FormTextField.  This is used to represent any free-text value entered by a user.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormFieldTextValue", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class FormFieldTextValue : JobServe.API.FormFieldValue {
        
        private string TextField;
        
        /// <summary>The text value.  Note that for fields that accept multi-line responses, when sending the value as XML you will most likely need to use a CDATA section to ensure that whitespace is preserved.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                this.TextField = value;
            }
        }
    }
    
    /// <summary>(AMG Use Only) A collection of zero or more FormField objects.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="FormFieldCollection", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ItemName="Field")]
    public partial class FormFieldCollection : System.Collections.Generic.List<JobServe.API.FormField> {
    }
    
    /// <summary>(AMG Use Only) Represents zero or more FormFieldSelectionValue objects.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="FormFieldSelectionValuesCollection", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ItemName="Value")]
    public partial class FormFieldSelectionValuesCollection : System.Collections.Generic.List<JobServe.API.FormFieldSelectionValue> {
    }
    
    /// <summary>Returned when you have exceeded your quota for a particular operation or group of operations. Will be present in the body of any HTTP 429 response.  See RFC 2616 for more on the HTTP 429 status code.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuotaExceeded", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class QuotaExceeded : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime ResumeAfterField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>UTC Date &amp; Time after which the server will likely honour request, if re-submitted.  Note that this doesn't *guarantee* that the request will be accepted after this time, because quotas can stack across different operations.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ResumeAfter {
            get {
                return this.ResumeAfterField;
            }
            set {
                this.ResumeAfterField = value;
            }
        }
    }
    
    /// <summary>Represents a job search query.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobSearch", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(JobServe.API.SavedJobSearch))]
    public partial class JobSearch : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private JobServe.API.IDCollection AccountGroupIDsField;
        
        private JobServe.API.IDCollection AccountIDsField;
        
        private bool ExcludeUnknownSalariesField;
        
        private JobServe.API.IDCollection IndustriesField;
        
        private bool JobIDsOnlyField;
        
        private JobServe.API.IDCollection JobTypesField;
        
        private JobServe.API.LocationCollection LocationsField;
        
        private System.Nullable<int> MaxAgeField;
        
        private System.Nullable<double> MaxDistanceField;
        
        private System.Nullable<int> PageField;
        
        private System.Nullable<int> PageSizeField;
        
        private string RoleField;
        
        private JobServe.API.SalaryFilter SalariesField;
        
        private string SkillsField;
        
        private string SortOrderField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>Zero or more IDs of posting account groups whose jobs are to be searched. An account group is a predetermined collection of accounts and the IDs are not currently publicly available. Only certain clients will need to use this field.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.IDCollection AccountGroupIDs {
            get {
                return this.AccountGroupIDsField;
            }
            set {
                this.AccountGroupIDsField = value;
            }
        }
        
        /// <summary>Zero or more IDs of posting accounts whose jobs are to be searched. An account is typically a single employer/recruitment agency. The IDs are not currently publicly available through a single service. Only certain clients will need to use this field.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.IDCollection AccountIDs {
            get {
                return this.AccountIDsField;
            }
            set {
                this.AccountIDsField = value;
            }
        }
        
        /// <summary>Controls whether jobs for which we have no salary information will be included in the search.  Can be used in conjunction with Salaries to include both jobs with a salary within a range and jobs with no salary.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ExcludeUnknownSalaries {
            get {
                return this.ExcludeUnknownSalariesField;
            }
            set {
                this.ExcludeUnknownSalariesField = value;
            }
        }
        
        /// <summary>Zero or more IDs of industries to be searched.  If not specified, the defaults will be used. The IDs must each match one of those in the industries data exposed by this service.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.IDCollection Industries {
            get {
                return this.IndustriesField;
            }
            set {
                this.IndustriesField = value;
            }
        }
        
        /// <summary>Controls whether the full job content for each result is returned, or only its ID - which can then later be used to retrieve that job singularly.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool JobIDsOnly {
            get {
                return this.JobIDsOnlyField;
            }
            set {
                this.JobIDsOnlyField = value;
            }
        }
        
        /// <summary>Zero or more (although typically only one) IDs of the types of jobs to be searched.  If not specified, the defaults will be used. The IDs must each match one of those in the job types data exposed by this service.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.IDCollection JobTypes {
            get {
                return this.JobTypesField;
            }
            set {
                this.JobTypesField = value;
            }
        }
        
        /// <summary>Location(s) to be searched, including country.  If a location has both Text and ID, then it is expected to reference a known location previously obtained by querying the Location service.  Please note that multiple locations from multiple countries are not supported.  For a boolean query for multiple locations in one country (e.g. 'London or Manchester', just set the boolean query text in the text field of one location, with the country set.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.LocationCollection Locations {
            get {
                return this.LocationsField;
            }
            set {
                this.LocationsField = value;
            }
        }
        
        /// <summary>Maximum age of the job, in days.  In practise, the maximum value for this is 7.  The value 0 causes only jobs which have been posted since midnight GMT Standard time to be searched.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxAge {
            get {
                return this.MaxAgeField;
            }
            set {
                this.MaxAgeField = value;
            }
        }
        
        /// <summary>The maximum distance (granular) from the location.  The unit for this depends on the culture you specify in the request - for UK and USA we use miles, for everywhere else we use kilometres.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> MaxDistance {
            get {
                return this.MaxDistanceField;
            }
            set {
                this.MaxDistanceField = value;
            }
        }
        
        /// <summary>The page of results to be returned.  1 is the default.  Note that each page of results returned from the server indicates the number of pages that are available.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Page {
            get {
                return this.PageField;
            }
            set {
                this.PageField = value;
            }
        }
        
        /// <summary>The maximum number of jobs per page to be retrieved.  Note that this is restricted to a maximum of 20 by default.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                this.PageSizeField = value;
            }
        }
        
        /// <summary>Boolean query for the position of job(s) sought.  Note that if you only set this field (and not Skills), then only the job titles (Position field on the Job object) will be searched.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                this.RoleField = value;
            }
        }
        
        /// <summary>Use this to specify salary filters to the search.  You can only filter by one country/currency/frequency combination at a time.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.SalaryFilter Salaries {
            get {
                return this.SalariesField;
            }
            set {
                this.SalariesField = value;
            }
        }
        
        /// <summary>Boolean query for the skillset sought.  Note that if you only use this field then both the job description and title will be searched.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Skills {
            get {
                return this.SkillsField;
            }
            set {
                this.SkillsField = value;
            }
        }
        
        /// <summary>Optional - The order that search results are to be returned in.  Values for this member can be obtained from the job search value lists service.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                this.SortOrderField = value;
            }
        }
    }
    
    /// <summary>Used to specify a salary filter on a job search.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalaryFilter", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class SalaryFilter : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CountryField;
        
        private string CurrencyField;
        
        private string FrequencyField;
        
        private System.Nullable<decimal> LowerField;
        
        private JobServe.API.IDCollection RangeIDsField;
        
        private System.Nullable<decimal> UpperField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>Should ideally always be provided - ID of the country (obtained from the Countries data available on this web service) in whose currency the salary filter is described.  E.g. Specifying 'GBR' will also imply Pounds Sterling (GBP)</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                this.CountryField = value;
            }
        }
        
        /// <summary>Nearly always optional - ID of the currency (obtained from the Currencies data available on this web service) in which the salary filter is described.  Only needs to be supplied if the Country has more than one currency.  Note that if you do supply it, the currency must be present in the Country's salary data.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                this.CurrencyField = value;
            }
        }
        
        /// <summary>Required - ID of the salary frequency (obtained from the SalaryFrequencies data available on this web service) in which the salary is described.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Frequency {
            get {
                return this.FrequencyField;
            }
            set {
                this.FrequencyField = value;
            }
        }
        
        /// <summary>A lower-bound value for a user-specified salary range search.  If not specified and Upper is, then there is no lower bound.  Note that this is ignored if RangeIDs is specified.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Lower {
            get {
                return this.LowerField;
            }
            set {
                this.LowerField = value;
            }
        }
        
        /// <summary>Zero or more IDs, taken from the salary range data.  If specified, then it overrides any lower/upper values you pass.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.IDCollection RangeIDs {
            get {
                return this.RangeIDsField;
            }
            set {
                this.RangeIDsField = value;
            }
        }
        
        /// <summary>An upper-bound value for a user-specified salary range search.  If not specified and Lower is, then there is no upper bound.  Note that this is ignored if RangeIDs is specified.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Upper {
            get {
                return this.UpperField;
            }
            set {
                this.UpperField = value;
            }
        }
    }
    
    /// <summary>(AMG Use Only) Represents a candidate's saved job search.  The saved search APIs will return this and expects to receive these when creating/modifying saved searches.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SavedJobSearch", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class SavedJobSearch : JobServe.API.JobSearch {
        
        private string IDField;
        
        private string NameField;
        
        private bool UsePreferredSearchCountriesField;
        
        /// <summary>The unique ID of this saved search.  This is required if modifying an existing search.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                this.IDField = value;
            }
        }
        
        /// <summary>A descriptive name for this saved search.  Required when saving/updating.  Note that uniqueness is not enforced for this on the server because our database doesn't enforce it.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                this.NameField = value;
            }
        }
        
        /// <summary>If true, then the search countries must be set to the candidate's preferred countries list (note - this can be retrieved from the candidate details API) before you pass this to the Search APIs.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UsePreferredSearchCountries {
            get {
                return this.UsePreferredSearchCountriesField;
            }
            set {
                this.UsePreferredSearchCountriesField = value;
            }
        }
    }
    
    /// <summary>Represents zero or more locations.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="LocationCollection", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ItemName="Location")]
    public partial class LocationCollection : System.Collections.Generic.List<JobServe.API.Location> {
    }
    
    /// <summary>Represents a geographical location of an object - such as a job or candidate; but also used for querying.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CountryField;
        
        private string IDField;
        
        private System.Nullable<double> LatitudeField;
        
        private System.Nullable<double> LongitudeField;
        
        private string ParentLocationField;
        
        private string TextField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>The country of this location.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                this.CountryField = value;
            }
        }
        
        /// <summary>Unique ID of this location</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                this.IDField = value;
            }
        }
        
        /// <summary>Latitude of this location.  Note that on searches (unless explicitly stated otherwise in the service documentation), this will not automatically be geo-located - you must use the Locations service to do that.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                this.LatitudeField = value;
            }
        }
        
        /// <summary>Longitude of this location.  Note that on searches (unless explicitly stated otherwise in the service documentation), this will not automatically be geo-located - you must use the Locations service to do that.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                this.LongitudeField = value;
            }
        }
        
        /// <summary>(Currently not used) ID of the location in which this location can be found geographically.  Note - will be ignored on searches.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentLocation {
            get {
                return this.ParentLocationField;
            }
            set {
                this.ParentLocationField = value;
            }
        }
        
        /// <summary>Display name of this location.  Note, when used on queries this will support boolean query syntax (e.g. 'London OR Manchester')</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                this.TextField = value;
            }
        }
    }
    
    /// <summary>(AMG Use Only) A collection of zero or more saved job searches.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SavedJobSearchCollection", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ItemName="SavedJobSearch")]
    public partial class SavedJobSearchCollection : System.Collections.Generic.List<JobServe.API.SavedJobSearch> {
    }
    
    /// <summary>Zero or more ValueListItem objects. In practise, it should never be empty.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ValueListItemCollection", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ItemName="Item")]
    public partial class ValueListItemCollection : System.Collections.Generic.List<JobServe.API.ValueListItem> {
    }
    
    /// <summary>An individual item of a ValueList.  Represents a value that is to be set on an object to be sent to the server where the range of values is limited.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValueListItem", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class ValueListItem : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DescriptionField;
        
        private string IDField;
        
        private string ValueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>Descriptive string to be displayed to the user for this value.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                this.DescriptionField = value;
            }
        }
        
        /// <summary>Rarely present (present for potential future uses) - a unique ID of this value in the ValueList that it belongs to.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                this.IDField = value;
            }
        }
        
        /// <summary>The value to be written to the object if this is selected by the user.  This is typically unique among the range of items in the parent ValueList.  Note that this is a string, whereas the member to be bound might be of a different type.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                this.ValueField = value;
            }
        }
    }
    
    /// <summary>A dictionary (keyed by string) of value lists for a particular object when bound to UI.  The Key is the name of the member to which the ValueList should be bound.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ValueListsIndex", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ItemName="ValueList", KeyName="Name", ValueName="List")]
    public partial class ValueListsIndex : System.Collections.Generic.Dictionary<string, JobServe.API.ValueList> {
    }
    
    /// <summary>Describes a list of values to be offered as selection options for a particular member of an object.  For example, the supported sort orders for job searching are exposed by the Web API using one of these.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValueList", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class ValueList : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<bool> AllowMultipleField;
        
        private JobServe.API.ValueListItem DefaultValueField;
        
        private JobServe.API.ValueListItem EmptyValueField;
        
        private JobServe.API.ValueListItemCollection ItemsField;
        
        private System.Nullable<int> MaxMultipleField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>If true, then multiple values can be chosen from this list and set into the associated member.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> AllowMultiple {
            get {
                return this.AllowMultipleField;
            }
            set {
                this.AllowMultipleField = value;
            }
        }
        
        /// <summary>This is the value that should be selected by default if no previous selection is available.  This will be equal to one of the values in the Items collection.  If the ID is set, then simply look for the item with that ID; otherwise use the Value to identify the correct item.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.ValueListItem DefaultValue {
            get {
                return this.DefaultValueField;
            }
            set {
                this.DefaultValueField = value;
            }
        }
        
        /// <summary>This should be used as the value if it's not to be explicitly chosen.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.ValueListItem EmptyValue {
            get {
                return this.EmptyValueField;
            }
            set {
                this.EmptyValueField = value;
            }
        }
        
        /// <summary>The items to be displayed to the user.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.ValueListItemCollection Items {
            get {
                return this.ItemsField;
            }
            set {
                this.ItemsField = value;
            }
        }
        
        /// <summary>If AllowMultiple is true, then this indicates the maximum number of multiple selections that can be made.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MaxMultiple {
            get {
                return this.MaxMultipleField;
            }
            set {
                this.MaxMultipleField = value;
            }
        }
    }
    
    /// <summary>(AMG Use Only) The result of applying for one or more jobs.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobApplicationResult", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class JobApplicationResult : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private JobServe.API.JobApplicationForm ApplicationFormField;
        
        private JobServe.API.IDCollection ApplicationIDsField;
        
        private bool SuccessField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>If Success is false, then this contains the application form that was submitted.  Field validation errors will be found on any field that failed validation.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.JobApplicationForm ApplicationForm {
            get {
                return this.ApplicationFormField;
            }
            set {
                this.ApplicationFormField = value;
            }
        }
        
        /// <summary>Unique ID of each job application that was successfully submitted if Success is true.  Note that in the case of multiple applications, these IDs are in the same order as the original Job IDs on the JobApplicationForm that was submitted.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.IDCollection ApplicationIDs {
            get {
                return this.ApplicationIDsField;
            }
            set {
                this.ApplicationIDsField = value;
            }
        }
        
        /// <summary>Indicates whether the form passed validation and that applications were subsequently made.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success {
            get {
                return this.SuccessField;
            }
            set {
                this.SuccessField = value;
            }
        }
    }
    
    /// <summary>(AMG Use Only) Application form returned for one or more jobs.  Also, this is what you submit in order to apply for jobs.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobApplicationForm", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class JobApplicationForm : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private JobServe.API.FormFieldCollection FieldsField;
        
        private JobServe.API.IDCollection JobIDsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>The application form's fields.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.FormFieldCollection Fields {
            get {
                return this.FieldsField;
            }
            set {
                this.FieldsField = value;
            }
        }
        
        /// <summary>IDs of the jobs that are being applied for.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.IDCollection JobIDs {
            get {
                return this.JobIDsField;
            }
            set {
                this.JobIDsField = value;
            }
        }
    }
    
    /// <summary>A collection of zero or more jobs - e.g. for search results</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="JobCollection", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ItemName="Job")]
    public partial class JobCollection : System.Collections.Generic.List<JobServe.API.Job> {
    }
    
    /// <summary>Represents the 'public' view of a job - as shown in searches etc.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Job", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class Job : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AccountIDField;
        
        private string AdvertiserNameField;
        
        private string AdvertiserReferenceField;
        
        private string ContactNameField;
        
        private string CountryField;
        
        private System.Nullable<System.DateTime> DatePostedField;
        
        private string DurationField;
        
        private string EmailField;
        
        private bool ExpiredField;
        
        private string FaxField;
        
        private string HtmlDescriptionField;
        
        private string IDField;
        
        private JobServe.API.IDCollection IndustriesField;
        
        private string JobTypeField;
        
        private System.DateTime LastModifiedUTCField;
        
        private JobServe.API.Location LocationField;
        
        private System.Uri PermalinkField;
        
        private string PermanentIDField;
        
        private string PositionField;
        
        private string RecruiterNameField;
        
        private string SalaryField;
        
        private string ShortDescriptionField;
        
        private string StartField;
        
        private string TelephoneField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>ID of the account that posted this job.  Can be used to create a job search which returns only jobs posted by this account.  Note that this is not provided if the advertiser's identity is hidden.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                this.AccountIDField = value;
            }
        }
        
        /// <summary>If present, this is the name of the business for whom this job is for.  Note that some jobs are advertised as anonymous - i.e. with no business information - at the request of the advertiser, and so this might not be present.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdvertiserName {
            get {
                return this.AdvertiserNameField;
            }
            set {
                this.AdvertiserNameField = value;
            }
        }
        
        /// <summary>If present, this is the advertiser/recruiter's own reference for this job.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdvertiserReference {
            get {
                return this.AdvertiserReferenceField;
            }
            set {
                this.AdvertiserReferenceField = value;
            }
        }
        
        /// <summary>Name of the person at the advertising business or recruiter who is responsible for this job.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                this.ContactNameField = value;
            }
        }
        
        /// <summary>ID of the country in which this job is located.  Note that this is also likely to be present on the Location too.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                this.CountryField = value;
            }
        }
        
        /// <summary>Date and time, in UTC, when this job was posted.  Note that when jobs are re-advertised, this value represents the date and time of the new version of this job.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DatePosted {
            get {
                return this.DatePostedField;
            }
            set {
                this.DatePostedField = value;
            }
        }
        
        /// <summary>If this post has a fixed-term, this field will contain a textual description of that.  Contract jobs, in particular should always have this set.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Duration {
            get {
                return this.DurationField;
            }
            set {
                this.DurationField = value;
            }
        }
        
        /// <summary>Contact email address for this job.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                this.EmailField = value;
            }
        }
        
        /// <summary>True if this job is actually no longer live.  This field should always be checked, even if you are retrieving this job from a search, because occasionally jobs are returned from searches that have actually just expired or have been deleted.  It only happens for very short periods of time (minutes), however.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Expired {
            get {
                return this.ExpiredField;
            }
            set {
                this.ExpiredField = value;
            }
        }
        
        /// <summary>Contact fax number for this job.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                this.FaxField = value;
            }
        }
        
        /// <summary>HTML description of this job.  Please note - this is not guaranteed to be X-HTML - it could be HTML4.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HtmlDescription {
            get {
                return this.HtmlDescriptionField;
            }
            set {
                this.HtmlDescriptionField = value;
            }
        }
        
        /// <summary>ID of this job for its current week of being 'live'.  As described in the documentation for PermanentID - a job is live for at most 1 week at a time, but can be re-advertised multiple times.  Each time it's re-advertised, a new ID is allocated and is used to retrieve the job details until it expires again (previous IDs don't work after expiry).</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                this.IDField = value;
            }
        }
        
        /// <summary>At least one and up to three IDs of the industries that this job relates to.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.IDCollection Industries {
            get {
                return this.IndustriesField;
            }
            set {
                this.IndustriesField = value;
            }
        }
        
        /// <summary>ID of the type of job - i.e. Permanent/Contract.  You can get the master list of IDs from the job types service.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobType {
            get {
                return this.JobTypeField;
            }
            set {
                this.JobTypeField = value;
            }
        }
        
        /// <summary>Date and Time, in UTC, when this job was last modified.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModifiedUTC {
            get {
                return this.LastModifiedUTCField;
            }
            set {
                this.LastModifiedUTCField = value;
            }
        }
        
        /// <summary>The location of this job - the Text is to be used to display to the user.  Latitude/Longitude present here is not exact - but can be used to locate the job on a map over a wide area.  In inner city areas, for example, this data is not granular enough to provide fine location placement.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.Location Location {
            get {
                return this.LocationField;
            }
            set {
                this.LocationField = value;
            }
        }
        
        /// <summary>Permalink to the website for this job.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri Permalink {
            get {
                return this.PermalinkField;
            }
            set {
                this.PermalinkField = value;
            }
        }
        
        /// <summary>ID for this job that will remain across all the weeks that it is live.  Jobs are live for only one week at a time, but might be re-advertised.  When this happens, they get a new ID, but the PermanentID will remain the same.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermanentID {
            get {
                return this.PermanentIDField;
            }
            set {
                this.PermanentIDField = value;
            }
        }
        
        /// <summary>Description of the position being offered.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                this.PositionField = value;
            }
        }
        
        /// <summary>Name of the business that this job is advertised by.  Note that this will be different to the AdvertiserName in the cases where a recruitment agency is advertising the job on behalf of another business.  Equally, it might not be provided at all if the job is anonymously advertised.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecruiterName {
            get {
                return this.RecruiterNameField;
            }
            set {
                this.RecruiterNameField = value;
            }
        }
        
        /// <summary>String description of the remuneration package offered by this job.  This is generally as-entered by the user that originally posted the job and so frequently does not include numeric data - So strings like '[£|$|€]Competitive + Bens' are not uncommon.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salary {
            get {
                return this.SalaryField;
            }
            set {
                this.SalaryField = value;
            }
        }
        
        /// <summary>A summary of the job's details.  This is taken directly from the HtmlDescription and will be plain text, so can therefore be used for a summary view of the job.  Note that despite the name, this isn't necessarily short - it is recommended that you select a certain number of words from the start of this for display purposes.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortDescription {
            get {
                return this.ShortDescriptionField;
            }
            set {
                this.ShortDescriptionField = value;
            }
        }
        
        /// <summary>A textual description of when this position commences.  This might be a fixed date, but could equally be 'ASAP' or some other relative term.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Start {
            get {
                return this.StartField;
            }
            set {
                this.StartField = value;
            }
        }
        
        /// <summary>Contact telephone number for this job.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                this.TelephoneField = value;
            }
        }
    }
    
    /// <summary>Returned when something is wrong with the data sent in the request (usually, but not always, accompanies an HTTP 400 response).  The source of the errors could come from the body or the query string.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectValidationErrors", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class ObjectValidationErrors : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private JobServe.API.StringCollection ErrorsField;
        
        private JobServe.API.ObjectMemberValidationErrors MemberErrorsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>General errors that aren't tied to a particular member or request parameter</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.StringCollection Errors {
            get {
                return this.ErrorsField;
            }
            set {
                this.ErrorsField = value;
            }
        }
        
        /// <summary>Individual errors that relate specifically to a member of an object constructed from the body of the request or a parameter in the query string.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.ObjectMemberValidationErrors MemberErrors {
            get {
                return this.MemberErrorsField;
            }
            set {
                this.MemberErrorsField = value;
            }
        }
    }
    
    /// <summary>A dictionary of errors, keyed by the name of the member/parameter they relate to.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectMemberValidationErrors", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ItemName="MemberError", KeyName="Member", ValueName="Error")]
    public partial class ObjectMemberValidationErrors : System.Collections.Generic.Dictionary<string, string> {
    }
    
    /// <summary>(AMG Use Only) Used to transfer SCRAM authentication requests and responses.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SCRAMAuth", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class SCRAMAuth : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string MessageField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>The message text - will follow the format as laid out in http://tools.ietf.org/html/rfc5802</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                this.MessageField = value;
            }
        }
    }
    
    /// <summary>A collection of decimal values</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="DecimalCollection", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ItemName="Value")]
    public partial class DecimalCollection : System.Collections.Generic.List<decimal> {
    }
    
    /// <summary>Represents a country or other recognised territory.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class Country : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DisplayNameField;
        
        private string IDField;
        
        private string ISO2Field;
        
        private string ISO3Field;
        
        private string NameField;
        
        private string NativeNameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>Display name of the country in the culture provided in the request.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                this.DisplayNameField = value;
            }
        }
        
        /// <summary>The unique ID of this country when transmitted from/to these web services.  This is usually, but not always, equal to the ISO 3.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                this.IDField = value;
            }
        }
        
        /// <summary>ISO 2 (ISO 3166-1 alpha-2) code for this country.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISO2 {
            get {
                return this.ISO2Field;
            }
            set {
                this.ISO2Field = value;
            }
        }
        
        /// <summary>ISO 3 (ISO 3166-1 alpha-3) code for this country.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ISO3 {
            get {
                return this.ISO3Field;
            }
            set {
                this.ISO3Field = value;
            }
        }
        
        /// <summary>Name of the country - possibly more 'formal' than the display name.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                this.NameField = value;
            }
        }
        
        /// <summary>The name of this country as written in the primary local language.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NativeName {
            get {
                return this.NativeNameField;
            }
            set {
                this.NativeNameField = value;
            }
        }
    }
    
    /// <summary>Represents zero or more countries.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="CountryCollection", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ItemName="Country")]
    public partial class CountryCollection : System.Collections.Generic.List<JobServe.API.Country> {
    }
    
    /// <summary>Returned by the location service in response to a geolocation query (i.e. a match by latitude/longitude).  Contains the location that matched and the distance from the location passed in the query.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeoLocationMatch", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class GeoLocationMatch : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private double DistanceField;
        
        private JobServe.API.Location LocationField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>The distance from the input location.  It's worth paying attention to this, since in some parts of the world our location data might be sparse, and thus the closest known location to a given latitude/longitude might be some distance away.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Distance {
            get {
                return this.DistanceField;
            }
            set {
                this.DistanceField = value;
            }
        }
        
        /// <summary>The location that was found.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.Location Location {
            get {
                return this.LocationField;
            }
            set {
                this.LocationField = value;
            }
        }
    }
    
    /// <summary>Represents one of our 'known' industries - e.g. 'I.T.'.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Industry", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class Industry : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DisplayNameField;
        
        private string IDField;
        
        private string NameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>The text to be used when displaying this industry to users.  If not present, use the Name.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                this.DisplayNameField = value;
            }
        }
        
        /// <summary>The unique ID of this industry.  Use this when communicating with other services that only require an ID.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                this.IDField = value;
            }
        }
        
        /// <summary>The formal name of the industry.  If the DisplayName is not present, then use this for display purposes.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                this.NameField = value;
            }
        }
    }
    
    /// <summary>Collection of zero or more industries.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="IndustryCollection", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ItemName="Industry")]
    public partial class IndustryCollection : System.Collections.Generic.List<JobServe.API.Industry> {
    }
    
    /// <summary>A page of results from a job search.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobSearchResults", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class JobSearchResults : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.Nullable<System.TimeSpan> DurationField;
        
        private int JobCountField;
        
        private JobServe.API.IDCollection JobIDsField;
        
        private JobServe.API.JobCollection JobsField;
        
        private int PageCountField;
        
        private int PageNoField;
        
        private int PageSizeField;
        
        private JobServe.API.ProximityStats ProximityStatsField;
        
        private JobServe.API.StringCollection RoleSuggestionsField;
        
        private JobServe.API.JobSearch SearchField;
        
        private JobServe.API.StringCollection SkillsSuggestionsField;
        
        private System.Nullable<System.DateTime> StartedField;
        
        private int ThisPageSizeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>The length of time taken by the search engine to obtain this page of results.  Note that because of a lack of precision, this value can be zero.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.TimeSpan> Duration {
            get {
                return this.DurationField;
            }
            set {
                this.DurationField = value;
            }
        }
        
        /// <summary>Total number of jobs that match the search.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int JobCount {
            get {
                return this.JobCountField;
            }
            set {
                this.JobCountField = value;
            }
        }
        
        /// <summary>Zero or more IDs of the jobs that were returned by the search engine.  Note that these are in the same order as the Jobs collection.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.IDCollection JobIDs {
            get {
                return this.JobIDsField;
            }
            set {
                this.JobIDsField = value;
            }
        }
        
        /// <summary>Zero or more Jobs that were returned by the search engine.  Note that these are in the same order as the JobIDs collection.  These will not be returned by the search service if the JobIDsOnly member of the JobSearch object is set to true.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.JobCollection Jobs {
            get {
                return this.JobsField;
            }
            set {
                this.JobsField = value;
            }
        }
        
        /// <summary>Total number of pages available for these search results.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageCount {
            get {
                return this.PageCountField;
            }
            set {
                this.PageCountField = value;
            }
        }
        
        /// <summary>The page number of this page of results.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageNo {
            get {
                return this.PageNoField;
            }
            set {
                this.PageNoField = value;
            }
        }
        
        /// <summary>The number of results per page in these results.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                this.PageSizeField = value;
            }
        }
        
        /// <summary>Contains alternative job counts, by proximity, for this same search.  E.g. if you run a search for a very localised area and small proximity, this might contain alternative location searches outside that area, along with job counts.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.ProximityStats ProximityStats {
            get {
                return this.ProximityStatsField;
            }
            set {
                this.ProximityStatsField = value;
            }
        }
        
        /// <summary>One or more strings representing alternative (potentially better) Role string(s) to be used for this query.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.StringCollection RoleSuggestions {
            get {
                return this.RoleSuggestionsField;
            }
            set {
                this.RoleSuggestionsField = value;
            }
        }
        
        /// <summary>The actual search that was run.  This is provided so you can more easily formulate follow-on queries, such as next/previous page, as well binding UI.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.JobSearch Search {
            get {
                return this.SearchField;
            }
            set {
                this.SearchField = value;
            }
        }
        
        /// <summary>One or more strings representing alternative (potentially better) Skills string(s) to be used for this query.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.StringCollection SkillsSuggestions {
            get {
                return this.SkillsSuggestionsField;
            }
            set {
                this.SkillsSuggestionsField = value;
            }
        }
        
        /// <summary>The date and time (UTC) this query was submitted to the search engine.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Started {
            get {
                return this.StartedField;
            }
            set {
                this.StartedField = value;
            }
        }
        
        /// <summary>The number of jobs for this page of results.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ThisPageSize {
            get {
                return this.ThisPageSizeField;
            }
            set {
                this.ThisPageSizeField = value;
            }
        }
    }
    
    /// <summary>Collection of ProximityStatistic objects</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ProximityStats", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ItemName="Stat")]
    public partial class ProximityStats : System.Collections.Generic.List<JobServe.API.ProximityStatistic> {
    }
    
    /// <summary>Represents an individual proximity statistic returned by the job search service.  In essence, you can think of this type as providing information like 'In addition to these jobs, within x miles of this location there are also n jobs'.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProximityStatistic", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class ProximityStatistic : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int CountField;
        
        private string DisplayTextField;
        
        private double ValueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>The number of jobs within this proximity and location.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                this.CountField = value;
            }
        }
        
        /// <summary>The name of the location that this statistic relates to.  Note that this is both to be displayed to the user and to be used to seed the Location text of a follow up job query to fetch the actual results.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                this.DisplayTextField = value;
            }
        }
        
        /// <summary>The proximity of these results to the original search location.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Value {
            get {
                return this.ValueField;
            }
            set {
                this.ValueField = value;
            }
        }
    }
    
    /// <summary>A job type - e.g. Permanent/Contract</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobType", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class JobType : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string IDField;
        
        private string TextField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>The unique ID of this job type.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                this.IDField = value;
            }
        }
        
        /// <summary>The display name of this job type.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                this.TextField = value;
            }
        }
    }
    
    /// <summary>Represents zero or more job types</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="JobTypeCollection", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ItemName="JobType")]
    public partial class JobTypeCollection : System.Collections.Generic.List<JobServe.API.JobType> {
    }
    
    /// <summary>Used to represent the discrete salary ranges supported by the search engine - these can be used, for example, to drive drop-downs for salary selection.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalaryBands", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class SalaryBands : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private JobServe.API.SalaryMetadata MetaField;
        
        private JobServe.API.SalaryRangeValueCollection RangesField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>The country/currency/payment frequency that these ranges relate to.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.SalaryMetadata Meta {
            get {
                return this.MetaField;
            }
            set {
                this.MetaField = value;
            }
        }
        
        /// <summary>The individual salary ranges.  Note that the first and last will be inbounded and, in between, all ranges will be contiguous.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.SalaryRangeValueCollection Ranges {
            get {
                return this.RangesField;
            }
            set {
                this.RangesField = value;
            }
        }
    }
    
    /// <summary>Represents a key for SalaryBands data.  For any given SalaryBands instance, this tells you which country, currency and salary frequency those bands are for.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalaryMetadata", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class SalaryMetadata : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CountryField;
        
        private string CurrencyField;
        
        private string FrequencyField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>The ID of the Country.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                this.CountryField = value;
            }
        }
        
        /// <summary>The ID of the Currency.  Note this is nearly always an ISO 4217 currency code.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                this.CurrencyField = value;
            }
        }
        
        /// <summary>The ID of the SalaryFrequency.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Frequency {
            get {
                return this.FrequencyField;
            }
            set {
                this.FrequencyField = value;
            }
        }
    }
    
    /// <summary>Zero or more SalaryRangeValue objects.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SalaryRangeValueCollection", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ItemName="Range")]
    public partial class SalaryRangeValueCollection : System.Collections.Generic.List<JobServe.API.SalaryRangeValue> {
    }
    
    /// <summary>Represents a salary range.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalaryRangeValue", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class SalaryRangeValue : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string IDField;
        
        private JobServe.API.SalaryValue LowerField;
        
        private string TextField;
        
        private JobServe.API.SalaryValue UpperField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>Where applicable, the unique ID of this range within the SalaryBands that it appears.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                this.IDField = value;
            }
        }
        
        /// <summary>The lower value of this range.  If not specified, then the range has no lower bound.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.SalaryValue Lower {
            get {
                return this.LowerField;
            }
            set {
                this.LowerField = value;
            }
        }
        
        /// <summary>Display text for this range - you should use this text to display it as opposed to trying to build it yourself from the lower and upper values.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                this.TextField = value;
            }
        }
        
        /// <summary>The upper value of this range.  If not specified, then the range has no upper bound.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public JobServe.API.SalaryValue Upper {
            get {
                return this.UpperField;
            }
            set {
                this.UpperField = value;
            }
        }
    }
    
    /// <summary>Represents a single salary value.  Used as lower and upper values for ranges, but also appears on jobs.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalaryValue", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class SalaryValue : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string BenefitsField;
        
        private string TextField;
        
        private System.Nullable<decimal> ValueField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>Any additional benefits offered - please note this value is currently never set when this value is used to describe a salary on a job.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Benefits {
            get {
                return this.BenefitsField;
            }
            set {
                this.BenefitsField = value;
            }
        }
        
        /// <summary>Textual description of the salary offered on a job.  Note that this is currently the only value that is set when used to describe the salary of a job.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                this.TextField = value;
            }
        }
        
        /// <summary>The physical remuneration of the salary, in monetary units.  Please note that this is currently never set when this value is used to describe a salary on a job.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Value {
            get {
                return this.ValueField;
            }
            set {
                this.ValueField = value;
            }
        }
    }
    
    /// <summary>A collection of zero or more SalaryBands objects.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SalaryBandsCollection", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ItemName="Bands")]
    public partial class SalaryBandsCollection : System.Collections.Generic.List<JobServe.API.SalaryBands> {
    }
    
    /// <summary>Represents a particular frequency of payment for a job - e.g. Annually/Hourly</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalaryFrequency", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class SalaryFrequency : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string IDField;
        
        private string SalaryFormatField;
        
        private string SalaryRangeFormatField;
        
        private string SalaryRangeFormatNoLowerField;
        
        private string SalaryRangeFormatNoUpperField;
        
        private string TextField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>The ID of this frequency - on other objects that accept a frequency ID this is the value you should use.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                this.IDField = value;
            }
        }
        
        /// <summary>A format string (the placeholder '{0}' is used to denote where a salary currency value should go) used for creating display strings for a single salary value.  Please note, does not include the currency symbol - and this should not be used in producing the string values for the three Range formats.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalaryFormat {
            get {
                return this.SalaryFormatField;
            }
            set {
                this.SalaryFormatField = value;
            }
        }
        
        /// <summary>A format string (the placeholders '{0}' &amp; '{1}' are used to denote where the lower and upper salary currency values should go, respectively) used for creating display strings for salary ranges that have both lower and upper bounds.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalaryRangeFormat {
            get {
                return this.SalaryRangeFormatField;
            }
            set {
                this.SalaryRangeFormatField = value;
            }
        }
        
        /// <summary>A format string (the placeholder '{0}' is used to denote where a salary currency value should go) used for creating display strings for a salary range that has no lower bound.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalaryRangeFormatNoLower {
            get {
                return this.SalaryRangeFormatNoLowerField;
            }
            set {
                this.SalaryRangeFormatNoLowerField = value;
            }
        }
        
        /// <summary>A format string (the placeholder '{0}' is used to denote where a salary currency value should go) used for creating display strings for a salary range that has no upper bound.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalaryRangeFormatNoUpper {
            get {
                return this.SalaryRangeFormatNoUpperField;
            }
            set {
                this.SalaryRangeFormatNoUpperField = value;
            }
        }
        
        /// <summary>Localised textual description of this salary format.  Can be used in UI where a particular salary frequency is chosen by a user.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                this.TextField = value;
            }
        }
    }
    
    /// <summary>Zero or more SalaryFrequency objects.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="SalaryFrequencyCollection", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta", ItemName="SalaryFrequency")]
    public partial class SalaryFrequencyCollection : System.Collections.Generic.List<JobServe.API.SalaryFrequency> {
    }
    
    /// <summary>Represents the current version of the Web API.  Use this when caching the service metadata to ascertain if anything is likely to have changed at our end between application re-starts.</summary>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WebServiceVersionInfo", Namespace="http://schemas.aspiremediagroup.net/jobboard/1.0/Beta")]
    public partial class WebServiceVersionInfo : object, System.Runtime.Serialization.IExtensibleDataObject {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CodeTimestampField;
        
        private string CodeVersionField;
        
        private string ConfigTimestampField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        /// <summary>The date &amp; time of the build date of the binaries running on the web server.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeTimestamp {
            get {
                return this.CodeTimestampField;
            }
            set {
                this.CodeTimestampField = value;
            }
        }
        
        /// <summary>The version number of the binaries running on the web server.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeVersion {
            get {
                return this.CodeVersionField;
            }
            set {
                this.CodeVersionField = value;
            }
        }
        
        /// <summary>The date &amp; time of the web server configuration.  Changes to this can indicate API changes and bug fixes as well as metadata changes.</summary>
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigTimestamp {
            get {
                return this.ConfigTimestampField;
            }
            set {
                this.ConfigTimestampField = value;
            }
        }
    }
}
